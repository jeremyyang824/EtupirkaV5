//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34209
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码由 wsdl 自动生成, Version=4.0.30319.33440。
// 
namespace Etupirka.Implement.External.STMC.BAPI
{
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;


    /// <remarks/>
    // CODEGEN: 未处理命名空间“http://schemas.xmlsoap.org/ws/2004/09/policy”中的可选 WSDL 扩展元素“Policy”。
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "ZQM_DISPATCH", Namespace = "urn:sap-com:document:sap:soap:functions:mc-style")]
    public partial class ZQM_DISPATCH : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback ZqmmogxexistsOperationCompleted;

        /// <remarks/>
        public ZQM_DISPATCH()
        {
            this.Url = "http://sapprod.sh-ctmc.com:8000/sap/bc/srt/rfc/sap/zqm_dispatch/510/zqm_dispatch/" +
                "zqm_dispatch";
        }

        /// <remarks/>
        public event ZqmmogxexistsCompletedEventHandler ZqmmogxexistsCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace = "urn:sap-com:document:sap:soap:functions:mc-style", ResponseNamespace = "urn:sap-com:document:sap:soap:functions:mc-style", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("Output", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public int Zqmmogxexists([System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string Ordernumber, [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)] string Vornr)
        {
            object[] results = this.Invoke("Zqmmogxexists", new object[] {
                        Ordernumber,
                        Vornr});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginZqmmogxexists(string Ordernumber, string Vornr, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("Zqmmogxexists", new object[] {
                        Ordernumber,
                        Vornr}, callback, asyncState);
        }

        /// <remarks/>
        public int EndZqmmogxexists(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void ZqmmogxexistsAsync(string Ordernumber, string Vornr)
        {
            this.ZqmmogxexistsAsync(Ordernumber, Vornr, null);
        }

        /// <remarks/>
        public void ZqmmogxexistsAsync(string Ordernumber, string Vornr, object userState)
        {
            if ((this.ZqmmogxexistsOperationCompleted == null))
            {
                this.ZqmmogxexistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnZqmmogxexistsOperationCompleted);
            }
            this.InvokeAsync("Zqmmogxexists", new object[] {
                        Ordernumber,
                        Vornr}, this.ZqmmogxexistsOperationCompleted, userState);
        }

        private void OnZqmmogxexistsOperationCompleted(object arg)
        {
            if ((this.ZqmmogxexistsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ZqmmogxexistsCompleted(this, new ZqmmogxexistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    public delegate void ZqmmogxexistsCompletedEventHandler(object sender, ZqmmogxexistsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ZqmmogxexistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ZqmmogxexistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}
