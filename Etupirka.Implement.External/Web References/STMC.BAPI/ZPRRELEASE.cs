//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34209
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码由 wsdl 自动生成, Version=4.0.30319.33440。
// 
namespace Etupirka.Implement.External.STMC.BAPI {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    // CODEGEN: 未处理命名空间“http://schemas.xmlsoap.org/ws/2004/09/policy”中的可选 WSDL 扩展元素“Policy”。
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ZPRRELEASE", Namespace="urn:sap-com:document:sap:soap:functions:mc-style")]
    public partial class ZPRRelease : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RequisitionReleaseGenOperationCompleted;
        
        private System.Threading.SendOrPostCallback PoReleaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequisitionReleaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequisitionResetReleaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequisitionResetRelGenOperationCompleted;
        
        private System.Threading.SendOrPostCallback PoResetReleaseOperationCompleted;
        
        /// <remarks/>
        public ZPRRelease() {
            this.Url = "http://sapprod.sh-ctmc.com:8000/sap/bc/srt/rfc/sap/zprrelease/510/zprrelease/zprr" +
                "elease";
        }
        
        /// <remarks/>
        public event RequisitionReleaseGenCompletedEventHandler RequisitionReleaseGenCompleted;
        
        /// <remarks/>
        public event PoReleaseCompletedEventHandler PoReleaseCompleted;
        
        /// <remarks/>
        public event RequisitionReleaseCompletedEventHandler RequisitionReleaseCompleted;
        
        /// <remarks/>
        public event RequisitionResetReleaseCompletedEventHandler RequisitionResetReleaseCompleted;
        
        /// <remarks/>
        public event RequisitionResetRelGenCompletedEventHandler RequisitionResetRelGenCompleted;
        
        /// <remarks/>
        public event PoResetReleaseCompletedEventHandler PoResetReleaseCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="urn:sap-com:document:sap:soap:functions:mc-style", ResponseNamespace="urn:sap-com:document:sap:soap:functions:mc-style", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RelIndicatorNew", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RequisitionReleaseGen([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string NoCommitWork, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Number, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string RelCode, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] ref Bapireturn[] Return, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string RelStatusNew) {
            object[] results = this.Invoke("RequisitionReleaseGen", new object[] {
                        NoCommitWork,
                        Number,
                        RelCode,
                        Return});
            Return = ((Bapireturn[])(results[1]));
            RelStatusNew = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRequisitionReleaseGen(string NoCommitWork, string Number, string RelCode, Bapireturn[] Return, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RequisitionReleaseGen", new object[] {
                        NoCommitWork,
                        Number,
                        RelCode,
                        Return}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndRequisitionReleaseGen(System.IAsyncResult asyncResult, out Bapireturn[] Return, out string RelStatusNew) {
            object[] results = this.EndInvoke(asyncResult);
            Return = ((Bapireturn[])(results[1]));
            RelStatusNew = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RequisitionReleaseGenAsync(string NoCommitWork, string Number, string RelCode, Bapireturn[] Return) {
            this.RequisitionReleaseGenAsync(NoCommitWork, Number, RelCode, Return, null);
        }
        
        /// <remarks/>
        public void RequisitionReleaseGenAsync(string NoCommitWork, string Number, string RelCode, Bapireturn[] Return, object userState) {
            if ((this.RequisitionReleaseGenOperationCompleted == null)) {
                this.RequisitionReleaseGenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequisitionReleaseGenOperationCompleted);
            }
            this.InvokeAsync("RequisitionReleaseGen", new object[] {
                        NoCommitWork,
                        Number,
                        RelCode,
                        Return}, this.RequisitionReleaseGenOperationCompleted, userState);
        }
        
        private void OnRequisitionReleaseGenOperationCompleted(object arg) {
            if ((this.RequisitionReleaseGenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequisitionReleaseGenCompleted(this, new RequisitionReleaseGenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="urn:sap-com:document:sap:soap:functions:mc-style", ResponseNamespace="urn:sap-com:document:sap:soap:functions:mc-style", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RelIndicatorNew", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string PoRelease([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string NoCommit, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string PoRelCode, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Purchaseorder, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] ref Bapireturn[] Return, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string UseExceptions, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string RelStatusNew, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out int RetCode) {
            object[] results = this.Invoke("PoRelease", new object[] {
                        NoCommit,
                        PoRelCode,
                        Purchaseorder,
                        Return,
                        UseExceptions});
            Return = ((Bapireturn[])(results[1]));
            RelStatusNew = ((string)(results[2]));
            RetCode = ((int)(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPoRelease(string NoCommit, string PoRelCode, string Purchaseorder, Bapireturn[] Return, string UseExceptions, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PoRelease", new object[] {
                        NoCommit,
                        PoRelCode,
                        Purchaseorder,
                        Return,
                        UseExceptions}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndPoRelease(System.IAsyncResult asyncResult, out Bapireturn[] Return, out string RelStatusNew, out int RetCode) {
            object[] results = this.EndInvoke(asyncResult);
            Return = ((Bapireturn[])(results[1]));
            RelStatusNew = ((string)(results[2]));
            RetCode = ((int)(results[3]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PoReleaseAsync(string NoCommit, string PoRelCode, string Purchaseorder, Bapireturn[] Return, string UseExceptions) {
            this.PoReleaseAsync(NoCommit, PoRelCode, Purchaseorder, Return, UseExceptions, null);
        }
        
        /// <remarks/>
        public void PoReleaseAsync(string NoCommit, string PoRelCode, string Purchaseorder, Bapireturn[] Return, string UseExceptions, object userState) {
            if ((this.PoReleaseOperationCompleted == null)) {
                this.PoReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPoReleaseOperationCompleted);
            }
            this.InvokeAsync("PoRelease", new object[] {
                        NoCommit,
                        PoRelCode,
                        Purchaseorder,
                        Return,
                        UseExceptions}, this.PoReleaseOperationCompleted, userState);
        }
        
        private void OnPoReleaseOperationCompleted(object arg) {
            if ((this.PoReleaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PoReleaseCompleted(this, new PoReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="urn:sap-com:document:sap:soap:functions:mc-style", ResponseNamespace="urn:sap-com:document:sap:soap:functions:mc-style", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RelIndicatorNew", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RequisitionRelease([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Item, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string NoCommitWork, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Number, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string RelCode, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] ref Bapireturn[] Return, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string UseExceptions, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string RelStatusNew) {
            object[] results = this.Invoke("RequisitionRelease", new object[] {
                        Item,
                        NoCommitWork,
                        Number,
                        RelCode,
                        Return,
                        UseExceptions});
            Return = ((Bapireturn[])(results[1]));
            RelStatusNew = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRequisitionRelease(string Item, string NoCommitWork, string Number, string RelCode, Bapireturn[] Return, string UseExceptions, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RequisitionRelease", new object[] {
                        Item,
                        NoCommitWork,
                        Number,
                        RelCode,
                        Return,
                        UseExceptions}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndRequisitionRelease(System.IAsyncResult asyncResult, out Bapireturn[] Return, out string RelStatusNew) {
            object[] results = this.EndInvoke(asyncResult);
            Return = ((Bapireturn[])(results[1]));
            RelStatusNew = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RequisitionReleaseAsync(string Item, string NoCommitWork, string Number, string RelCode, Bapireturn[] Return, string UseExceptions) {
            this.RequisitionReleaseAsync(Item, NoCommitWork, Number, RelCode, Return, UseExceptions, null);
        }
        
        /// <remarks/>
        public void RequisitionReleaseAsync(string Item, string NoCommitWork, string Number, string RelCode, Bapireturn[] Return, string UseExceptions, object userState) {
            if ((this.RequisitionReleaseOperationCompleted == null)) {
                this.RequisitionReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequisitionReleaseOperationCompleted);
            }
            this.InvokeAsync("RequisitionRelease", new object[] {
                        Item,
                        NoCommitWork,
                        Number,
                        RelCode,
                        Return,
                        UseExceptions}, this.RequisitionReleaseOperationCompleted, userState);
        }
        
        private void OnRequisitionReleaseOperationCompleted(object arg) {
            if ((this.RequisitionReleaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequisitionReleaseCompleted(this, new RequisitionReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="urn:sap-com:document:sap:soap:functions:mc-style", ResponseNamespace="urn:sap-com:document:sap:soap:functions:mc-style", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RelIndicatorNew", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RequisitionResetRelease([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Item, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string NoCommitWork, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Number, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string RelCode, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] ref Bapireturn[] Return, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string UseExceptions, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string RelStatusNew) {
            object[] results = this.Invoke("RequisitionResetRelease", new object[] {
                        Item,
                        NoCommitWork,
                        Number,
                        RelCode,
                        Return,
                        UseExceptions});
            Return = ((Bapireturn[])(results[1]));
            RelStatusNew = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRequisitionResetRelease(string Item, string NoCommitWork, string Number, string RelCode, Bapireturn[] Return, string UseExceptions, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RequisitionResetRelease", new object[] {
                        Item,
                        NoCommitWork,
                        Number,
                        RelCode,
                        Return,
                        UseExceptions}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndRequisitionResetRelease(System.IAsyncResult asyncResult, out Bapireturn[] Return, out string RelStatusNew) {
            object[] results = this.EndInvoke(asyncResult);
            Return = ((Bapireturn[])(results[1]));
            RelStatusNew = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RequisitionResetReleaseAsync(string Item, string NoCommitWork, string Number, string RelCode, Bapireturn[] Return, string UseExceptions) {
            this.RequisitionResetReleaseAsync(Item, NoCommitWork, Number, RelCode, Return, UseExceptions, null);
        }
        
        /// <remarks/>
        public void RequisitionResetReleaseAsync(string Item, string NoCommitWork, string Number, string RelCode, Bapireturn[] Return, string UseExceptions, object userState) {
            if ((this.RequisitionResetReleaseOperationCompleted == null)) {
                this.RequisitionResetReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequisitionResetReleaseOperationCompleted);
            }
            this.InvokeAsync("RequisitionResetRelease", new object[] {
                        Item,
                        NoCommitWork,
                        Number,
                        RelCode,
                        Return,
                        UseExceptions}, this.RequisitionResetReleaseOperationCompleted, userState);
        }
        
        private void OnRequisitionResetReleaseOperationCompleted(object arg) {
            if ((this.RequisitionResetReleaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequisitionResetReleaseCompleted(this, new RequisitionResetReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="urn:sap-com:document:sap:soap:functions:mc-style", ResponseNamespace="urn:sap-com:document:sap:soap:functions:mc-style", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RelIndicatorNew", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string RequisitionResetRelGen([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string NoCommitWork, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Number, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string RelCode, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] ref Bapireturn[] Return, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string RelStatusNew) {
            object[] results = this.Invoke("RequisitionResetRelGen", new object[] {
                        NoCommitWork,
                        Number,
                        RelCode,
                        Return});
            Return = ((Bapireturn[])(results[1]));
            RelStatusNew = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginRequisitionResetRelGen(string NoCommitWork, string Number, string RelCode, Bapireturn[] Return, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("RequisitionResetRelGen", new object[] {
                        NoCommitWork,
                        Number,
                        RelCode,
                        Return}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndRequisitionResetRelGen(System.IAsyncResult asyncResult, out Bapireturn[] Return, out string RelStatusNew) {
            object[] results = this.EndInvoke(asyncResult);
            Return = ((Bapireturn[])(results[1]));
            RelStatusNew = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void RequisitionResetRelGenAsync(string NoCommitWork, string Number, string RelCode, Bapireturn[] Return) {
            this.RequisitionResetRelGenAsync(NoCommitWork, Number, RelCode, Return, null);
        }
        
        /// <remarks/>
        public void RequisitionResetRelGenAsync(string NoCommitWork, string Number, string RelCode, Bapireturn[] Return, object userState) {
            if ((this.RequisitionResetRelGenOperationCompleted == null)) {
                this.RequisitionResetRelGenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequisitionResetRelGenOperationCompleted);
            }
            this.InvokeAsync("RequisitionResetRelGen", new object[] {
                        NoCommitWork,
                        Number,
                        RelCode,
                        Return}, this.RequisitionResetRelGenOperationCompleted, userState);
        }
        
        private void OnRequisitionResetRelGenOperationCompleted(object arg) {
            if ((this.RequisitionResetRelGenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequisitionResetRelGenCompleted(this, new RequisitionResetRelGenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="urn:sap-com:document:sap:soap:functions:mc-style", ResponseNamespace="urn:sap-com:document:sap:soap:functions:mc-style", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("RelIndicatorNew", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string PoResetRelease([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string PoRelCode, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string Purchaseorder, [System.Xml.Serialization.XmlArrayAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] [System.Xml.Serialization.XmlArrayItemAttribute("item", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=false)] ref Bapireturn[] Return, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string UseExceptions, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out string RelStatusNew) {
            object[] results = this.Invoke("PoResetRelease", new object[] {
                        PoRelCode,
                        Purchaseorder,
                        Return,
                        UseExceptions});
            Return = ((Bapireturn[])(results[1]));
            RelStatusNew = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPoResetRelease(string PoRelCode, string Purchaseorder, Bapireturn[] Return, string UseExceptions, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PoResetRelease", new object[] {
                        PoRelCode,
                        Purchaseorder,
                        Return,
                        UseExceptions}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndPoResetRelease(System.IAsyncResult asyncResult, out Bapireturn[] Return, out string RelStatusNew) {
            object[] results = this.EndInvoke(asyncResult);
            Return = ((Bapireturn[])(results[1]));
            RelStatusNew = ((string)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PoResetReleaseAsync(string PoRelCode, string Purchaseorder, Bapireturn[] Return, string UseExceptions) {
            this.PoResetReleaseAsync(PoRelCode, Purchaseorder, Return, UseExceptions, null);
        }
        
        /// <remarks/>
        public void PoResetReleaseAsync(string PoRelCode, string Purchaseorder, Bapireturn[] Return, string UseExceptions, object userState) {
            if ((this.PoResetReleaseOperationCompleted == null)) {
                this.PoResetReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPoResetReleaseOperationCompleted);
            }
            this.InvokeAsync("PoResetRelease", new object[] {
                        PoRelCode,
                        Purchaseorder,
                        Return,
                        UseExceptions}, this.PoResetReleaseOperationCompleted, userState);
        }
        
        private void OnPoResetReleaseOperationCompleted(object arg) {
            if ((this.PoResetReleaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PoResetReleaseCompleted(this, new PoResetReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    public delegate void RequisitionReleaseGenCompletedEventHandler(object sender, RequisitionReleaseGenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequisitionReleaseGenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequisitionReleaseGenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public Bapireturn[] Return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Bapireturn[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string RelStatusNew {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    public delegate void PoReleaseCompletedEventHandler(object sender, PoReleaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PoReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PoReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public Bapireturn[] Return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Bapireturn[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string RelStatusNew {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public int RetCode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    public delegate void RequisitionReleaseCompletedEventHandler(object sender, RequisitionReleaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequisitionReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequisitionReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public Bapireturn[] Return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Bapireturn[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string RelStatusNew {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    public delegate void RequisitionResetReleaseCompletedEventHandler(object sender, RequisitionResetReleaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequisitionResetReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequisitionResetReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public Bapireturn[] Return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Bapireturn[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string RelStatusNew {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    public delegate void RequisitionResetRelGenCompletedEventHandler(object sender, RequisitionResetRelGenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequisitionResetRelGenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequisitionResetRelGenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public Bapireturn[] Return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Bapireturn[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string RelStatusNew {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    public delegate void PoResetReleaseCompletedEventHandler(object sender, PoResetReleaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PoResetReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PoResetReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public Bapireturn[] Return {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Bapireturn[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string RelStatusNew {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
}
